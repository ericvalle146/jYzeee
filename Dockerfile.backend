# ========================================
# üöÄ DOCKERFILE BACKEND - NESTJS
# ========================================

FROM node:18-alpine

# Instalar depend√™ncias do sistema necess√°rias para SSH
RUN apk add --no-cache \
    openssh-client \
    sshpass \
    curl \
    bash \
    && rm -rf /var/cache/apk/*

# Criar usu√°rio n√£o-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001 -G nodejs

# Definir diret√≥rio de trabalho
WORKDIR /app

# Copiar package files
COPY backend/package*.json ./

# Instalar todas as depend√™ncias (incluindo dev para o build)
RUN npm ci && npm cache clean --force

# Copiar c√≥digo fonte do backend
COPY backend/ ./

# Build da aplica√ß√£o
RUN npm run build

# Remover depend√™ncias de desenvolvimento ap√≥s o build
RUN npm prune --production

# Criar diret√≥rios necess√°rios
RUN mkdir -p /app/logs /app/uploads /tmp/jyze-print-queue

# Configurar SSH para impress√£o
RUN mkdir -p /home/nestjs/.ssh && \
    chmod 700 /home/nestjs/.ssh && \
    chown -R nestjs:nodejs /home/nestjs/.ssh

# Configurar SSH para n√£o verificar host keys (necess√°rio para automa√ß√£o)
RUN echo "Host *" >> /etc/ssh/ssh_config && \
    echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config && \
    echo "    UserKnownHostsFile=/dev/null" >> /etc/ssh/ssh_config

# Criar script de entrada
COPY <<EOF /docker-entrypoint.sh
#!/bin/bash

echo "üöÄ Iniciando Backend JYZE..."
echo "üîó API: https://api.jyze.space"
echo "üîê SSH Host: \${SSH_HOST:-192.168.3.5}"
echo "üñ®Ô∏è Printer: \${PRINTER_NAME:-5808L-V2024}"
echo "üì¶ Build: \$(date)"

# Verificar vari√°veis de ambiente essenciais
if [ -z "\$SUPABASE_URL" ]; then
    echo "‚ùå ERRO: SUPABASE_URL n√£o configurada!"
    exit 1
fi

if [ -z "\$SUPABASE_KEY" ]; then
    echo "‚ùå ERRO: SUPABASE_KEY n√£o configurada!"
    exit 1
fi

# Testar conex√£o SSH para impress√£o (se configurada)
if [ -n "\$SSH_HOST" ] && [ -n "\$SSH_USER" ] && [ -n "\$SSH_PASSWORD" ]; then
    echo "üîê Testando conex√£o SSH para impress√£o..."
    if timeout 5 sshpass -p "\$SSH_PASSWORD" ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no "\$SSH_USER@\$SSH_HOST" 'echo "SSH OK"' >/dev/null 2>&1; then
        echo "‚úÖ Conex√£o SSH funcionando!"
    else
        echo "‚ö†Ô∏è Conex√£o SSH falhando - impress√£o pode n√£o funcionar"
    fi
fi

# Iniciar aplica√ß√£o
echo "üéØ Iniciando servidor NestJS na porta \${PORT:-3002}..."
exec node dist/main.js
EOF

RUN chmod +x /docker-entrypoint.sh

# Ajustar permiss√µes
RUN chown -R nestjs:nodejs /app /tmp/jyze-print-queue

# Mudar para usu√°rio n√£o-root
USER nestjs

# Expor porta
EXPOSE 3002

# Labels para metadados
LABEL maintainer="JYZE Team"
LABEL version="1.0.0"
LABEL description="Backend NestJS para JYZE Delivery com suporte SSH"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3002/printer/status || exit 1

# Entrada
ENTRYPOINT ["/docker-entrypoint.sh"]
