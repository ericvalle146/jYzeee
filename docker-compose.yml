# ========================================
# üöÄ DOCKER COMPOSE - JYZE DELIVERY VPS
# ========================================

version: '3.8'

services:
  # üåê FRONTEND (jyze.space)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: jyze-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      
      # URLs da aplica√ß√£o
      - VITE_API_URL=https://api.jyze.space
      - VITE_FRONTEND_URL=https://jyze.space
      
      # Supabase Frontend
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      
      # N8N Webhooks
      - VITE_WEBHOOK_URL=${VITE_WEBHOOK_URL}
      - VITE_WEBHOOK_CRUD_PRODUTOS=${VITE_WEBHOOK_CRUD_PRODUTOS}
      - VITE_WEBHOOK_LINK_URL=${VITE_WEBHOOK_LINK_URL}
      
      # Evolution API (WhatsApp)
      - VITE_EVOLUTION_API_URL=${VITE_EVOLUTION_API_URL}
      - VITE_EVOLUTION_API_KEY=${VITE_EVOLUTION_API_KEY}
      - VITE_WHATSAPP_INSTANCE_NAME=${VITE_WHATSAPP_INSTANCE_NAME}
    networks:
      - jyze-network
    volumes:
      - frontend_logs:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro  # Se voc√™ tiver certificados SSL
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`jyze.space`,`www.jyze.space`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üîß BACKEND (api.jyze.space)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: jyze-backend
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      # Configura√ß√µes gerais
      - NODE_ENV=production
      - PORT=3002
      
      # Banco de dados
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      
      # SSH para impress√£o
      - SSH_USER=${SSH_USER:-eric}
      - SSH_HOST=${SSH_HOST:-192.168.3.5}
      - SSH_PASSWORD=${SSH_PASSWORD}
      - PRINTER_NAME=${PRINTER_NAME:-5808L-V2024}
      
      # URLs
      - CORS_ORIGIN=${CORS_ORIGIN:-https://jyze.space}
      - FRONTEND_URL=${FRONTEND_URL:-https://jyze.space}
      - BACKEND_URL=${BACKEND_URL:-https://api.jyze.space}
      
      # Logs
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ENABLE_LOGS=${ENABLE_LOGS:-true}
    networks:
      - jyze-network
    volumes:
      - backend_data:/app/uploads
      - backend_logs:/app/logs
      - print_queue:/tmp/jyze-print-queue
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.jyze.space`)"
      - "traefik.http.services.backend.loadbalancer.server.port=3002"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/printer/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # üîÑ REVERSE PROXY (Traefik) - Opcional
  traefik:
    image: traefik:v2.10
    container_name: jyze-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=admin@jyze.space
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - jyze-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.jyze.space`)"
      - "traefik.http.routers.traefik.service=api@internal"
    profiles:
      - traefik  # Use 'docker-compose --profile traefik up' para incluir

# üìÅ VOLUMES PERSISTENTES
volumes:
  frontend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/log/jyze/frontend
  
  backend_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/jyze/backend
  
  backend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/log/jyze/backend
  
  print_queue:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/jyze/print-queue
  
  traefik_letsencrypt:
    driver: local

# üåê REDE INTERNA
networks:
  jyze-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
